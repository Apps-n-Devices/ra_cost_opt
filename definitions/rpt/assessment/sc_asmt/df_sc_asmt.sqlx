config {
  type: "table",
  dependencies: ["begin_assessment_load"]
}
pre_operations {
    SET @@query_label =
      "step:df_sc_asmt, " ||
      "batch_id: ${dataform.projectConfig.vars.batch_id}";
}

WITH CTE AS(SELECT  
    -- Primary keys
      assessment_id
    , study_circle_id

    -- Performance measures
    , SUM(sum_response_velocity) AS sum_response_velocity

    -- Count measures
    , SUM(count_total_responses) AS count_total_responses
    , SUM(count_present_responses) AS count_present_responses
    , SUM(count_correct_responses) AS count_correct_responses  
    , SUM(count_incorrect_responses) AS count_incorrect_responses
    , SUM(count_near_correct_responses ) AS count_near_correct_responses  
    , SUM(count_not_answered_responses) AS count_not_answered_responses
    , COUNT(DISTINCT question_id) as count_questions_in_assessment
    , IFNULL(SUM(count_hand_raises),0) AS count_hand_raises
    
    -- Audit fields
    , MAX(ts) AS ts

FROM readanalytics.fact_ar fact
WHERE fact.ts > '${dataform.projectConfig.vars.batch_start_ts}' AND fact.ts <= '${dataform.projectConfig.vars.batch_end_ts}'
GROUP BY
    -- Primary keys
    assessment_id,
    study_circle_id
)
SELECT     -- Primary keys
     CTE.assessment_id
   , CTE.study_circle_id

   -- --array of assessment for related_assessment_ids
   , ARRAY_AGG(STRUCT(CTE.assessment_id)) OVER (PARTITION BY CTE.study_circle_id,a.topic_id,map.id) AS arr_related_assessments
 
   -- Performance measures
   , sum_response_velocity 

    -- Count measures
    , count_total_responses
    , count_present_responses
    , count_correct_responses  
    , count_incorrect_responses
    , count_near_correct_responses  
    , count_not_answered_responses
    , count_questions_in_assessment
    , count_hand_raises

    -- Audit fields
    , ts
FROM CTE
LEFT JOIN readanalytics.assessment a ON a.id =  CTE.assessment_id
LEFT JOIN `readanalytics.master_study_circle` msc ON msc.id = CTE.study_circle_id
LEFT JOIN `readanalytics.master_course` mc ON mc.id = msc.ref_course_id
LEFT JOIN `readanalytics.master_academic_period` map ON map.board_id = mc.board_id AND a.assessment_date BETWEEN map.start_date AND map.end_date
